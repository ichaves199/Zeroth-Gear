local last_pos = vmath.vector3()
go.property("interactable", vmath.vector3())

function init(self)
	msg.post(".","acquire_input_focus")
	self.runSpeed = 100
	self.curAnim = "idle"
	msg.post("#sprite", "play_animation", { id=hash("idle") })
	self.speed = vmath.vector3()
	-- msg.post("#collider", "enable")
end
function update(self, dt)
	local pos = go.get_position()
	
	if self.speed.x ~= 0 or self.speed.y ~= 0 then    
		-- last_pos = pos
		-- pos = pos + self.speed * dt
		-- go.set_position(pos)
		if self.curAnim ~= "run" then
			-- msg.post("#sprite", "play_animation", { id=hash("run") })
			self.curAnim = "run"
		end
		self.speed.x = 0
		self.speed.y = 0
	end
end

function on_input(self, action_id, action)
	--[[
	if action_id == hash("MOVE_RIGHT") then
		self.speed.x = self.runSpeed
		sprite.set_hflip("#sprite", false)
	end    
	if action_id == hash("MOVE_LEFT") then
		self.speed.x = self.runSpeed * -1
		sprite.set_hflip("#sprite", true)
	end        
	if action_id == hash("MOVE_UP") then
		self.speed.y = self.runSpeed
	end
	if action_id == hash("MOVE_DOWN") then
		self.speed.y = self.runSpeed * -1
	end
	]]--
end

function on_message(self, message_id, message, sender)
	--[[
	if message_id == hash("collision_response") then
		print("Collision")
		-- check if we received a contact point message. One message for each contact point
		-- print(message.own_group)
		-- print(message.group)
		if message.group == hash("impenetrable") then
			print("Contact with wall")
			-- print(self.speed.x)
			-- print(self.speed.y)
			local pos = go.get_position()
			print("Position: " .. pos)
			print("Speed: " .. self.speed)
			go.set_position(last_pos)
		end
	end
	]]--
end





